type Mutation {
    register(input: RegisterInput!) : RegisterResult!
    # reset (input: ResetInput!) : ResetResult!
    login (input: LoginInput!) : LoginResult!
    logout : LogoutResult!
    #submit (input: SubmitInput!) : SubmitResult!
}

input RegisterInput {
    name: String
    stuNumber: String
    password: String
    department: String
    grade: String
    qq: String
    mail: String
}

type RegisterResult {
    # success, xxx already in use, invalid xxx, failed, already login, not empty error
    message: String
}

input ResetInput {
    name: String
    stuNumber: String
    mail: String
}

type ResetResult {
    # success, no user, failed
    message: String
}

input LoginInput {
    stuNumber: String
    password: String
}

type LoginResult {
    message: String
    userId: String
    role: String
}

type LogoutResult {
    message: String
}

input SubmitInput {
    challengeId: String!
    flag: String!
}

type SubmitResult {
    message: String
}